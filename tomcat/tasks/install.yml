---

- name: Tomcat - Install required dependencies
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ tcat_packages }}"
  become: yes

- name: Download and unarchive tomcat tarball
  ansible.builtin.unarchive:
    src: "{{ tcat_native_9 }}"
    dest: "{{ tcat_dest_dir }}"
    remote_src: yes

#- name: Tomcat - Install Native Library
#  yum:
#    name: "{{ tcat_source_url }}"
#    state: present
#  become: yes

- name: Tomcat - Get JAVA_HOME
  shell: echo $(readlink -f /usr/bin/java | sed "s:bin/java::")
  register: java_home
  changed_when: false

- name: Tomcat - Set java home
  set_fact:
    tcat_java_home: "{{ java_home.stdout }}"

- name: Tomcat - Check Existence of Tomcat
  stat:
    path: "{{ tcat_install_dir }}/README.md"
  register: tcat_exists

- name: Tomcat - Create appserver dir if it does not exist
  file:
    path: "{{ tcat_dest_dir }}"
    state: directory
    mode: '0755'
  become: yes

#- name: Install Tomcat from Yum package
#  package:
#    name: tomcat
#    state: present
#  become: yes

- name: Tomcat - Extract tomcat
  unarchive:
    remote_src: yes
    src: "{{ tcat_source_url }}"
    dest: "{{ tcat_dest_dir }}"
    creates: "{{ tcat_install_dir }}"
  when: not tcat_exists.stat.exists | bool

- name: Tomcat - Remove webapps
  file:
    path: "{{ tcat_webapps_dir }}/{{ item }}"
    state: absent
  loop:
    - ROOT
    - docs
    - examples
    - manager
    - host-manager

- name: Tomcat - "Remove identifying Tomcat Server Info"
  lineinfile:
    path: "{{ tcat_install_dir }}/lib/org/apache/catalina/util/ServerInfo.properties"
    regexp: "^server.info=.*"
    line: "server.info={{ tcat_server_info }}"
    create: yes
  notify:
    - Restart Tomcat
  become: yes

#- name: creates link directory from etc to conf
#  file:
#    src: /etc/tomcat
#    dest: "{{ tcat_install_dir }}/conf"
#    state: link
#  become: yes

- name: Tomcat - "Set log file max days before deletion"
  lineinfile:
    path: "{{ tcat_install_dir }}/conf/logging.properties"
    regexp: "{{ item.from }}"
    line: "{{ item.to }}"
  loop:
    - { from: "^1catalina.org.apache.juli.AsyncFileHandler.maxDays =.*",
        to: "1catalina.org.apache.juli.AsyncFileHandler.maxDays = {{ tcat_catalina_maxdays }}" }
    - { from: "^2localhost.org.apache.juli.AsyncFileHandler.maxDays =.*",
        to: "2localhost.org.apache.juli.AsyncFileHandler.maxDays = {{ tcat_localhost_maxdays }}" }
  notify:
    - Restart Tomcat
  become: yes


- name: Tomcat - "Clean up server.xml"
  replace:
    path: '{{ tcat_install_dir }}/conf/server.xml'
    regexp: '<!--[\s\S\n]*?-->'
    replace: ''
  become: yes

- name: Tomcat - Create tomcat Group
  group:
    name: "{{ tcat_group }}"
    system: yes
    state: present

- name: Tomcat - Create Tomcat User
  user:
    name: "{{ tcat_user }}"
    comment: "Apache Tomcat User"
    group: "{{ tcat_group }}"
    home: "{{ tcat_install_dir }}"
    shell: "{{ tcat_login_shell }}"

- name: Tomcat - Change tomcat directory ownership
  file:
    path: "{{ tcat_install_dir }}"
    state: directory
    recurse: yes
    owner: "{{ tcat_user }}"
    group: "{{ tcat_group }}"
  become: yes

- name: Tomcat - Set conf permissions
  file:
    path: "{{ tcat_install_dir }}/conf"
    state: directory
    mode: '0500'
    owner: "{{ tcat_user }}"
    group: "{{ tcat_group }}"
  become: yes

- name: Tomcat - Set log permissions
  file:
    path: "{{ tcat_install_dir }}/logs"
    state: directory
    mode: '0300'
    owner: "{{ tcat_user }}"
    group: "{{ tcat_group }}"

- name: Tomcat - Install as a service
  template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
    mode: '0644'
  become: yes
  notify:
    - Restart Tomcat

